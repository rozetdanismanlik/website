{"version":3,"sources":["webpack:///./src/components/icons/website.tsx","webpack:///./src/templates/yazar.tsx"],"names":["Website","xmlns","viewBox","style","height","d","stroke","strokeLinejoin","strokeMiterlimit","fill","HiddenMobile","AuthorMeta","AuthorBio","Bull","AuthorProfileBioImage","pageQuery","Author","props","author","data","authorYaml","edges","allMarkdownRemark","filter","edge","node","frontmatter","draft","process","id","totalCount","length","lang","config","title","name","content","bio","property","siteUrl","pathContext","slug","twitter","split","Wrapper","className","css","outer","SiteHeader","backgroundImage","profile_image","childImageSharp","fluid","src","inner","SiteNav","isHome","AuthorProfileImage","avatar","alt","location","website","SocialLink","href","target","rel","facebook","instagram","SiteMain","PostFeed","PostFeedRaise","map","PostCard","key","fields","post","Footer"],"mappings":"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","file":"component---src-templates-yazar-tsx-ca36b575822a6b1ab493.js","sourcesContent":["// tslint:disable:no-http-string\r\nimport * as React from 'react';\r\n\r\nconst Website: React.FunctionComponent = () => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{ height: '1.6rem' }}>\r\n    <path\r\n      d=\"M23.5 11.957c0 6.375-5.163 11.544-11.532 11.544C5.599 23.5.5 18.125.5 11.75.5 5.542 5.37.758 11.505.511l.5-.011C18.374.5 23.5 5.582 23.5 11.957zM11.505.511c-6 6.5-6 14.98 0 22.98m1-22.98c6 6.5 6 14.977 0 22.977M2 17.479h20.063m-19.657-12h19.062m-20.968 6h22.938\"\r\n      stroke=\"#fff\"\r\n      strokeLinejoin=\"round\"\r\n      strokeMiterlimit=\"10\"\r\n      fill=\"none\"\r\n    />\r\n  </svg>\r\n);\r\nexport default Website;\r\n","import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\n\r\nimport Footer from '../components/Footer';\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport PostCard from '../components/PostCard';\r\nimport Wrapper from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport {\r\n  AuthorProfileImage,\r\n  inner,\r\n  outer,\r\n  PostFeed,\r\n  PostFeedRaise,\r\n  SiteHeader,\r\n  SiteHeaderContent,\r\n  SiteTitle,\r\n  SiteMain,\r\n  SocialLink,\r\n} from '../styles/shared';\r\nimport { PageContext } from './post';\r\nimport Facebook from '../components/icons/facebook';\r\nimport Helmet from 'react-helmet';\r\nimport config from '../website-config';\r\nimport Website from '../components/icons/website';\r\nimport Twitter from '../components/icons/twitter';\r\nimport Instagram from '../components/icons/instagram';\r\n\r\nconst HiddenMobile = css`\r\n  @media (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst AuthorMeta = styled.div`\r\n  z-index: 10;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 0 10px 0;\r\n  font-family: Georgia, serif;\r\n  font-style: italic;\r\n`;\r\n\r\nconst AuthorBio = styled.h2`\r\n  z-index: 10;\r\n  flex-shrink: 0;\r\n  margin: 5px 0 10px 0;\r\n  max-width: 600px;\r\n  font-size: 2rem;\r\n  line-height: 1.3em;\r\n  font-weight: 300;\r\n  letter-spacing: 0.5px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst Bull = styled.span`\r\n  display: inline-block;\r\n  margin: 0 12px;\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst AuthorProfileBioImage = css`\r\n  z-index: 10;\r\n  flex-shrink: 0;\r\n  margin: 0 0 20px 0;\r\n  width: 100px;\r\n  height: 100px;\r\n  box-shadow: rgba(255, 255, 255, 0.1) 0 0 0 6px;\r\n`;\r\n\r\ninterface AuthorTemplateProps {\r\n  pathContext: {\r\n    slug: string;\r\n  };\r\n  pageContext: {\r\n    author: string;\r\n  };\r\n  data: {\r\n    logo: {\r\n      childImageSharp: {\r\n        fluid: any;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      totalCount: number;\r\n      edges: {\r\n        node: PageContext;\r\n      }[];\r\n    };\r\n    authorYaml: {\r\n      id: string;\r\n      website?: string;\r\n      twitter?: string;\r\n      facebook?: string;\r\n      instagram?: string;\r\n      location?: string;\r\n      // eslint-disable-next-line @typescript-eslint/camelcase\r\n      profile_image?: {\r\n        childImageSharp: {\r\n          fluid: any;\r\n        };\r\n      };\r\n      bio?: string;\r\n      avatar: {\r\n        childImageSharp: {\r\n          fluid: any;\r\n        };\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst Author: React.FunctionComponent<AuthorTemplateProps> = props => {\r\n  const author = props.data.authorYaml;\r\n  \r\n  const edges = props.data.allMarkdownRemark.edges.filter(\r\n    edge => {\r\n      const isDraft = (edge.node.frontmatter.draft !== true ||\r\n        process.env.NODE_ENV === 'development')\r\n      return isDraft && edge.node.frontmatter.author && edge.node.frontmatter.author.id === author.id\r\n    }\r\n  );\r\n  const totalCount = edges.length;\r\n\r\n  return (\r\n    <IndexLayout>\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>\r\n          {author.id} - {config.title}\r\n        </title>\r\n        <meta name=\"description\" content={author.bio} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"profile\" />\r\n        <meta property=\"og:title\" content={`${author.id} - ${config.title}`} />\r\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\r\n        <meta property=\"article:publisher\" content=\"https://www.facebook.com/pg/rozetdanismanlik/\" />\r\n        <meta property=\"article:author\" content=\"https://www.facebook.com/pg/rozetdanismanlik/\" />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content={`${author.id} - ${config.title}`} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:creator\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n      </Helmet>\r\n      <Wrapper>\r\n        <header\r\n          className=\"no-cover\"\r\n          css={[outer, SiteHeader]}\r\n          style={{\r\n            backgroundImage: author.profile_image ?\r\n              `url(${author.profile_image.childImageSharp.fluid.src})` :\r\n              '',\r\n          }}\r\n        >\r\n          <div css={inner}>\r\n            <SiteNav isHome={false} />\r\n            <SiteHeaderContent>\r\n              <img\r\n                css={[AuthorProfileImage, AuthorProfileBioImage]}\r\n                src={props.data.authorYaml.avatar.childImageSharp.fluid.src}\r\n                alt={author.id}\r\n              />\r\n              <SiteTitle>{author.id}</SiteTitle>\r\n              {author.bio && <AuthorBio>{author.bio}</AuthorBio>}\r\n              <AuthorMeta>\r\n                {author.location && (\r\n                  <div css={HiddenMobile}>\r\n                    {author.location} <Bull>&bull;</Bull>\r\n                  </div>\r\n                )}\r\n                <div css={HiddenMobile}>\r\n                  {totalCount > 1 && `${totalCount} posts`}\r\n                  {totalCount === 1 && '1 g√∂nderi'}\r\n                  {totalCount === 0 && 'Ba≈üka g√∂nderi yok'} <Bull>‚Ä¢</Bull>\r\n                </div>\r\n                {author.website && (\r\n                  <div>\r\n                    <a\r\n                      className=\"social-link-wb\"\r\n                      css={SocialLink}\r\n                      href={author.website}\r\n                      title=\"Website\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <Website />\r\n                    </a>\r\n                  </div>\r\n                )}\r\n                {author.facebook && (\r\n                  <a\r\n                    className=\"social-link-fb\"\r\n                    css={SocialLink}\r\n                    href={`https://www.facebook.com/${author.facebook}`}\r\n                    title=\"Facebook\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <Facebook />\r\n                  </a>\r\n                )}\r\n                {author.instagram && (\r\n                  <a\r\n                    className=\"social-link-ig\"\r\n                    css={SocialLink}\r\n                    href={`https://www.instagram.com/${author.instagram}`}\r\n                    title=\"Instagram\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <Instagram />\r\n                  </a>\r\n                )}\r\n                {author.twitter && (\r\n                  <a\r\n                    className=\"social-link-tw\"\r\n                    css={SocialLink}\r\n                    href={`https://twitter.com/${author.twitter}`}\r\n                    title=\"Twitter\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <Twitter />\r\n                  </a>\r\n                )}\r\n                {/* TODO: RSS for author */}\r\n                {/* <a\r\n                  css={SocialLink} className=\"social-link-rss\"\r\n                  href=\"https://feedly.com/i/subscription/feed/https://demo.ghost.io/author/ghost/rss/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    style={{ height: '1.9rem' }}\r\n                  >\r\n                    <circle cx=\"6.18\" cy=\"17.82\" r=\"2.18\" />\r\n                    <path d=\"M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z\" />\r\n                  </svg>\r\n                </a> */}\r\n              </AuthorMeta>\r\n            </SiteHeaderContent>\r\n          </div>\r\n        </header>\r\n        <main id=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={inner}>\r\n            <div css={[PostFeed, PostFeedRaise]}>\r\n              {edges.map(({ node }) => {\r\n                return <PostCard key={node.fields.slug} post={node} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default Author;\r\n\r\nexport const pageQuery = graphql`\r\n  query($author: String) {\r\n    authorYaml(id: { eq: $author }) {\r\n      id\r\n      website\r\n      twitter\r\n      bio\r\n      facebook\r\n      instagram\r\n      location\r\n      profile_image {\r\n        childImageSharp {\r\n          fluid(maxWidth: 3720) {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n      avatar {\r\n        childImageSharp {\r\n          fluid(maxWidth: 200) {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000, sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            date\r\n            draft\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 3720) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            author {\r\n              id\r\n              bio\r\n              avatar {\r\n                children {\r\n                  ... on ImageSharp {\r\n                    fixed(quality: 90) {\r\n                      src\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}