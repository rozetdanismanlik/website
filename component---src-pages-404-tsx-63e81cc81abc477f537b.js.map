{"version":3,"sources":["webpack:///./src/pages/404.tsx"],"names":["SiteNavCenter","ErrorTemplate","ErrorCode","ErrorDescription","colors","midgrey","ErrorLink","NotFoundPage","props","edges","data","allMarkdownRemark","css","SiteHeader","outer","className","id","inner","style","textAlign","to","PostFeed","map","node","key","fields","slug","post","pageQuery"],"mappings":"sRAaMA,EAAgB,mBAAH,oBAAG,CAAH,oIAWbC,EAAgB,CAAH,0CAIbC,EAAY,kBAAH,oBAAG,CAAH,mGAQTC,EAAmB,iBAAH,oBAAG,CAAH,kBAEXC,IAAOC,QAFI,sDAQhBC,EAAY,CAAH,6DAsDAC,UAtCsD,SAAAC,GAAS,IACpEC,EAAUD,EAAME,KAAKC,kBAArBF,MAER,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,sBAAQG,IAAG,YAAE,CAACC,IAAYC,OACxB,mBAAKC,UAAU,SACb,YAACf,EAAD,KACE,YAAC,IAAD,SAIN,oBAAMgB,GAAG,YAAYJ,IAAG,YAAE,CAACX,EAAea,OACxC,mBAAKF,IAAKK,KACR,uBAASC,MAAO,CAAEC,UAAW,WAC3B,YAACjB,EAAD,YACA,YAACC,EAAD,yBACA,YAAC,OAAD,CAAMS,IAAKN,EAAWc,GAAG,IAAzB,wBAMN,qBAAOR,IAAKE,KACV,mBAAKF,IAAKK,KACR,mBAAKL,IAAKS,KACPZ,EAAMa,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CAAUC,IAAKD,EAAKE,OAAOC,KAAMC,KAAMJ,aAYhD,IAAMK,EAAY","file":"component---src-pages-404-tsx-63e81cc81abc477f537b.js","sourcesContent":["import { graphql, Link } from 'gatsby';\r\nimport * as React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/core';\r\n\r\nimport SiteNavLogo from '../components/header/SiteNavLogo';\r\nimport PostCard from '../components/PostCard';\r\nimport Wrapper from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport { colors } from '../styles/colors';\r\nimport { inner, outer, PostFeed, SiteHeader } from '../styles/shared';\r\nimport { PageContext } from '../templates/post';\r\n\r\nconst SiteNavCenter = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  .site-nav-logo {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nconst ErrorTemplate = css`\r\n  padding: 7vw 4vw;\r\n`;\r\n\r\nconst ErrorCode = styled.h1`\r\n  margin: 0;\r\n  font-size: 12vw;\r\n  line-height: 1em;\r\n  letter-spacing: -5px;\r\n  opacity: 0.3;\r\n`;\r\n\r\nconst ErrorDescription = styled.p`\r\n  margin: 0;\r\n  color: ${colors.midgrey};\r\n  font-size: 3rem;\r\n  line-height: 1.3em;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst ErrorLink = css`\r\n  display: inline-block;\r\n  margin-top: 5px;\r\n`;\r\n\r\ninterface NotFoundTemplateProps {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      totalCount: number;\r\n      edges: {\r\n        node: PageContext;\r\n      }[];\r\n    };\r\n  };\r\n}\r\n\r\nconst NotFoundPage: React.FunctionComponent<NotFoundTemplateProps> = props => {\r\n  const { edges } = props.data.allMarkdownRemark;\r\n\r\n  return (\r\n    <IndexLayout>\r\n      <Wrapper>\r\n        <header css={[SiteHeader, outer]}>\r\n          <div className=\"inner\">\r\n            <SiteNavCenter>\r\n              <SiteNavLogo />\r\n            </SiteNavCenter>\r\n          </div>\r\n        </header>\r\n        <main id=\"site-main\" css={[ErrorTemplate, outer]}>\r\n          <div css={inner}>\r\n            <section style={{ textAlign: 'center' }}>\r\n              <ErrorCode>404</ErrorCode>\r\n              <ErrorDescription>Sayfa bulunamadı</ErrorDescription>\r\n              <Link css={ErrorLink} to=\"\">\r\n                Ana sayfaya git →\r\n              </Link>\r\n            </section>\r\n          </div>\r\n        </main>\r\n        <aside css={outer}>\r\n          <div css={inner}>\r\n            <div css={PostFeed}>\r\n              {edges.map(({ node }) => (\r\n                <PostCard key={node.fields.slug} post={node} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </aside>\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(limit: 3, sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            date\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 3720) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            author {\r\n              id\r\n              bio\r\n              avatar {\r\n                children {\r\n                  ... on ImageSharp {\r\n                    fixed(quality: 90) {\r\n                      src\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt\r\n          fields {\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}